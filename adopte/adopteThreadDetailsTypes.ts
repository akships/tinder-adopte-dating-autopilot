// Generated by https://quicktype.io

export interface AdopteThreadDetailsContainer {
  links?: Links;
  data?: ThreadDetails[];
  meta?: Meta;
}

export interface ThreadDetails {
  type?: ThreadDetailsType;
  id?: string;
  attributes?: Attributes;
  relationships?: Relationships;
}

export interface Attributes {
  from?: string;
  content?: string;
  type?: AttributesType;
  date?: number;
  tome?: number;
  chapter?: number;
}

export enum AttributesType {
  CharmAccepted = 'charm_accepted',
  Mail = 'mail',
}

export interface Relationships {
  audio?: Audio;
}

export interface Audio {
  data?: null;
}

export enum ThreadDetailsType {
  Message = 'message',
}

export interface Links {
  first?: string;
  last?: string;
}

export interface Meta {
  thread?: Thread;
  content?: string;
  notifications?: Notifications;
}

export interface Notifications {
  counters?: Counters;
  type?: null;
  message?: null;
}

export interface Counters {
  mails?: number;
  visits?: number;
  baskets?: number;
  user_news?: { [key: string]: number };
}

export interface Thread {
  status?: string;
  timestamp?: number;
  id?: string;
  preface?: Preface;
  is_special?: boolean;
  authorization_audio?: boolean;
  remote_status?: string;
  user?: User;
  title?: string;
}

export interface Preface {
  author?: string;
  title?: string;
  text?: string;
}

export interface User {
  id?: number;
  basic?: Basic;
}

export interface Basic {
  id?: number;
  pseudo?: string;
  online?: boolean;
  sex?: number;
  title?: string;
  age?: number;
  city?: string;
  timestamp?: number;
  count_pics?: number;
  dead?: boolean;
  is_blocked?: boolean;
  in_contact?: boolean;
  cover?: string;
  cover_url_large?: string;
  cover_url_small?: string;
  distance?: number;
}
