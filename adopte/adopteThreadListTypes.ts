// Generated by https?://quicktype.io

import { ThreadDetails } from './adopteThreadDetailsTypes';

export interface AdopteThreadListContainer {
  links?: Links;
  data?: ThreadList[];
  included?: Included[];
  meta?: Meta;
}

export interface ThreadList {
  type?: ThreadListType;
  id?: string;
  attributes?: ThreadListAttributes;
  relationships?: Relationships;
  messages?: ThreadDetails[];
}

export interface ThreadListAttributes {
  title?: string;
  status?: Status;
  timestamp?: number;
  is_special?: boolean;
}

export enum Status {
  New = 'new',
  Read = 'read',
  Replied = 'replied',
}

export interface Relationships {
  user?: User;
}

export interface User {
  data?: Data;
}

export interface Data {
  type?: DataType;
  id?: string;
}

export enum DataType {
  User = 'user',
}

export enum ThreadListType {
  Thread = 'thread',
}

export interface Included {
  type?: DataType;
  id?: string;
  attributes?: IncludedAttributes;
}

export interface IncludedAttributes {
  basic?: Basic;
}

export interface Basic {
  id?: number;
  pseudo?: string;
  online?: boolean;
  sex?: number;
  title?: string;
  age?: number;
  city?: string;
  timestamp?: number;
  count_pics?: number;
  dead?: boolean;
  is_blocked?: boolean;
  in_contact?: boolean;
  cover?: null | string;
  cover_url_large: null | string;
  cover_url_small: null | string;
  distance?: number;
  last_cnx_label?: string;
}

export interface Links {
  first?: string;
  last?: string;
}

export interface Meta {
  notifications?: Notifications;
}

export interface Notifications {
  counters?: Counters;
  type?: null;
  message?: null;
}

export interface Counters {
  mails?: number;
  visits?: number;
  baskets?: number;
  user_news?: { [key: string]: number };
}
